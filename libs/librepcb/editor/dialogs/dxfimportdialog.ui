<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>librepcb::editor::DxfImportDialog</class>
 <widget class="QDialog" name="librepcb::editor::DxfImportDialog">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>339</width>
    <height>250</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>DXF Import</string>
  </property>
  <layout class="QVBoxLayout" name="verticalLayout">
   <item>
    <layout class="QFormLayout" name="formLayout">
     <property name="fieldGrowthPolicy">
      <enum>QFormLayout::AllNonFixedFieldsGrow</enum>
     </property>
     <item row="0" column="0">
      <widget class="QLabel" name="label">
       <property name="text">
        <string>Layer:</string>
       </property>
      </widget>
     </item>
     <item row="0" column="1">
      <widget class="librepcb::editor::GraphicsLayerComboBox" name="cbxLayer" native="true">
       <property name="toolTip">
        <string>The layer to set on the imported objects.</string>
       </property>
      </widget>
     </item>
     <item row="1" column="0">
      <widget class="QLabel" name="label_2">
       <property name="text">
        <string>Line width:</string>
       </property>
      </widget>
     </item>
     <item row="1" column="1">
      <widget class="librepcb::editor::UnsignedLengthEdit" name="edtLineWidth" native="true">
       <property name="toolTip">
        <string>The line width to set on the imported objects.</string>
       </property>
      </widget>
     </item>
     <item row="2" column="0">
      <widget class="QLabel" name="label_4">
       <property name="text">
        <string>Scale factor:</string>
       </property>
      </widget>
     </item>
     <item row="2" column="1">
      <widget class="librepcb::editor::DoubleSpinBox" name="spbxScaleFactor">
       <property name="toolTip">
        <string>Additional scale factor, in case the DXF is not scaled properly.
Note: If you have issues with scaling, make sure to configure the measuring unit of the DXF in your MCAD.</string>
       </property>
       <property name="buttonSymbols">
        <enum>QAbstractSpinBox::NoButtons</enum>
       </property>
       <property name="decimals">
        <number>6</number>
       </property>
       <property name="maximum">
        <double>10000.000000000000000</double>
       </property>
       <property name="value">
        <double>1.000000000000000</double>
       </property>
      </widget>
     </item>
     <item row="3" column="0">
      <widget class="QLabel" name="label_3">
       <property name="text">
        <string>Position:</string>
       </property>
      </widget>
     </item>
     <item row="3" column="1">
      <widget class="QCheckBox" name="cbxInteractivePlacement">
       <property name="toolTip">
        <string>If checked (the default), you can interactively place the imported objects by cursor.
If unchecked, you need to specify exact coordinates where the point (0,0) of the DXF will be located.</string>
       </property>
       <property name="text">
        <string>Interactive</string>
       </property>
      </widget>
     </item>
     <item row="4" column="1">
      <layout class="QHBoxLayout" name="horizontalLayout_2">
       <item>
        <widget class="librepcb::editor::LengthEdit" name="edtPosX" native="true">
         <property name="toolTip">
          <string>X-coordinate.</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="librepcb::editor::LengthEdit" name="edtPosY" native="true">
         <property name="toolTip">
          <string>Y-coordinate.</string>
         </property>
        </widget>
       </item>
      </layout>
     </item>
     <item row="5" column="0">
      <widget class="QLabel" name="label_5">
       <property name="text">
        <string>Options:</string>
       </property>
      </widget>
     </item>
     <item row="5" column="1">
      <widget class="QCheckBox" name="cbxJoinTangentPolylines">
       <property name="toolTip">
        <string>If checked, tangent polylines of the DXF will be joined together.
Helps for example to avoid invalid board outline polygons.</string>
       </property>
       <property name="text">
        <string>Join tangent polylines</string>
       </property>
      </widget>
     </item>
     <item row="6" column="1">
      <widget class="QCheckBox" name="cbxCirclesAsDrills">
       <property name="toolTip">
        <string>If checked, circles will be imported as drills.
If unchecked (the default), circles will be imported as polygons.</string>
       </property>
       <property name="text">
        <string>Import circles as drills</string>
       </property>
      </widget>
     </item>
    </layout>
   </item>
   <item>
    <spacer name="verticalSpacer">
     <property name="orientation">
      <enum>Qt::Vertical</enum>
     </property>
     <property name="sizeHint" stdset="0">
      <size>
       <width>20</width>
       <height>40</height>
      </size>
     </property>
    </spacer>
   </item>
   <item>
    <widget class="QDialogButtonBox" name="buttonBox">
     <property name="orientation">
      <enum>Qt::Horizontal</enum>
     </property>
     <property name="standardButtons">
      <set>QDialogButtonBox::Cancel|QDialogButtonBox::Ok</set>
     </property>
    </widget>
   </item>
  </layout>
 </widget>
 <customwidgets>
  <customwidget>
   <class>librepcb::editor::LengthEdit</class>
   <extends>QWidget</extends>
   <header location="global">librepcb/editor/widgets/lengthedit.h</header>
   <container>1</container>
  </customwidget>
  <customwidget>
   <class>librepcb::editor::UnsignedLengthEdit</class>
   <extends>QWidget</extends>
   <header location="global">librepcb/editor/widgets/unsignedlengthedit.h</header>
   <container>1</container>
  </customwidget>
  <customwidget>
   <class>librepcb::editor::GraphicsLayerComboBox</class>
   <extends>QWidget</extends>
   <header location="global">librepcb/editor/widgets/graphicslayercombobox.h</header>
   <container>1</container>
  </customwidget>
  <customwidget>
   <class>librepcb::editor::DoubleSpinBox</class>
   <extends>QDoubleSpinBox</extends>
   <header location="global">librepcb/editor/widgets/doublespinbox.h</header>
  </customwidget>
 </customwidgets>
 <tabstops>
  <tabstop>cbxLayer</tabstop>
  <tabstop>spbxScaleFactor</tabstop>
  <tabstop>edtLineWidth</tabstop>
  <tabstop>spbxScaleFactor</tabstop>
  <tabstop>cbxInteractivePlacement</tabstop>
  <tabstop>edtPosX</tabstop>
  <tabstop>edtPosY</tabstop>
  <tabstop>cbxJoinTangentPolylines</tabstop>
  <tabstop>cbxCirclesAsDrills</tabstop>
  <tabstop>buttonBox</tabstop>
 </tabstops>
 <resources/>
 <connections>
  <connection>
   <sender>buttonBox</sender>
   <signal>accepted()</signal>
   <receiver>librepcb::editor::DxfImportDialog</receiver>
   <slot>accept()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>248</x>
     <y>254</y>
    </hint>
    <hint type="destinationlabel">
     <x>157</x>
     <y>274</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>buttonBox</sender>
   <signal>rejected()</signal>
   <receiver>librepcb::editor::DxfImportDialog</receiver>
   <slot>reject()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>316</x>
     <y>260</y>
    </hint>
    <hint type="destinationlabel">
     <x>286</x>
     <y>274</y>
    </hint>
   </hints>
  </connection>
 </connections>
</ui>
