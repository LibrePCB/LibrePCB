import {
    ComboBox,
    IconButton,
    LengthEdit,
    LineEdit,
} from "../../widgets.slint";
import {
    Board2dTabData,
    WindowSectionData,
} from "../../api.slint";

export component AddStrokeTextToolBar inherits HorizontalLayout {
    in property <int> section-index;
    in-out property <WindowSectionData> section;
    property <[Board2dTabData]> tabs: section.board-2d-tabs;

    spacing: 2px;

    layer-cbx := ComboBox {
        model: tabs[section.current-tab-index].tool-layer.items;
        current-index: tabs[section.current-tab-index].tool-layer.current-index;

        current-index-changed(index) => {
            tabs[section.current-tab-index].tool-layer.current-index = index;
        }
    }

    text-edt := LineEdit {
        min-width: 200px;
        text: tabs[section.current-tab-index].tool-value.text;
        placeholder-text: @tr("Enter text here...");
        suggestions: tabs[section.current-tab-index].tool-value.suggestions;

        text-edited(text) => {
            tabs[section.current-tab-index].tool-value.text = text;
        }
    }

    height-edt := LengthEdit {
        data: tabs[section.current-tab-index].tool-size;
        icon: @image-url("../../../../../font-awesome/svgs/solid/text-height.svg");
        tooltip: @tr("Text Height");
        min-width-text: "1.234";

        value-changed(v) => {
            tabs[section.current-tab-index].tool-size.value = v;
        }

        unit-changed(u) => {
            tabs[section.current-tab-index].tool-size.unit = u;
        }

        increase-triggered => {
            tabs[section.current-tab-index].tool-size.increase = true;
        }

        decrease-triggered => {
            tabs[section.current-tab-index].tool-size.decrease = true;
        }
    }

    mirror-sw := IconButton {
        icon: @image-url("../../../../../bootstrap-icons/icons/symmetry-vertical.svg");
        icon-scale: 0.6;
        tooltip: @tr("Mirror Text");
        background-color: #202020;
        background-color-hovered: #404040;
        background-color-checked: black;
        color-enabled: #606060;
        color-hovered: #e0e0e0;
        color-checked: #e0e0e0;
        border-radius: 10px;
        checked: tabs[section.current-tab-index].tool-mirrored;

        clicked => {
            tabs[section.current-tab-index].tool-mirrored = !self.checked;
        }
    }
}
