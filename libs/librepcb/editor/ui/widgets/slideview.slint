import { LinkText } from "linktext.slint";

export struct SlideViewPageData {
    title: string,
    disabled: bool,
}

export component SlideView inherits VerticalLayout {
    in property <[SlideViewPageData]> pages;
    in-out property <int> current-index: 0;

    callback page-clicked(index: int);
    page-clicked(index) => {
        current-index = index;
    }

    HorizontalLayout {
        height: self.preferred-height;
        alignment: start;

        for page[index] in pages: header-item-l := HorizontalLayout {
            header-item-btn := LinkText {
                width: self.preferred-width + 16px;
                height: self.preferred-height + 16px;
                vertical-alignment: center;
                horizontal-alignment: center;
                text: page.title;
                text-color: (index == current-index) ? #e0e0e0 : #909090;
                text-color-hovered: (index == current-index) ? #ffffff : #a0a0a0;
                enabled: !page.disabled;

                clicked => {
                    page-clicked(index);
                }
            }

            if (index + 1) < pages.length: Text {
                text: "â€¢";
                color: #909090;
                vertical-alignment: center;
                accessible-role: none;
            }
        }
    }

    Rectangle {
        height: 1px;
        background: #555555;
    }

    flickable := Flickable {
        property <float> animated-index: max(min(current-index, pages.length - 1), 0);

        animate animated-index { duration: 200ms; }

        viewport-width: self.width * pages.length;
        viewport-height: self.height;
        viewport-x: min(max(-self.width * animated-index, -self.viewport-width + self.width), 0);
        viewport-y: 0;
        interactive: false;

        HorizontalLayout {
            height: 100%;

            @children
        }
    }
}
