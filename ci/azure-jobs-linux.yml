jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu-22.04'
  timeoutInMinutes: 120
  variables:
    OS: 'linux'
    ARCH: 'x86_64'
  strategy:
    matrix:
      Ubuntu_2004_Qt_6_6_GCC:
        IMAGE: librepcb/librepcb-dev:ubuntu-20.04-qt6.6-2
        DEPLOY: true
        NO_HOEDOWN: true
      Ubuntu_2204_Clang:
        IMAGE: librepcb/librepcb-dev:ubuntu-22.04-3
        CC: clang
        CXX: clang++
      Ubuntu_2404_Unbundled:
        IMAGE: librepcb/librepcb-dev:ubuntu-24.04-1
        UNBUNDLE_DXFLIB: true
        UNBUNDLE_GTEST: true
        UNBUNDLE_MUPARSER: true
        UNBUNDLE_QUAZIP: true
        UNBUNDLE_POLYCLIPPING: true
        LD_LIBRARY_PATH: $(Build.Repository.LocalPath)/build/install/opt/lib
  container:
    image: $[ variables['IMAGE'] ]
  steps:
  - checkout: self
    clean: true
    submodules: recursive
  - bash: ./ci/print_environment.sh
    displayName: Print Environment
  - bash: |
      source ./ci/install_dependencies.sh
      # Pass modified PATH to following steps:
      echo "##vso[task.setvariable variable=PATH]$PATH"
    displayName: Install Dependencies
  - bash: ./ci/print_environment.sh
    displayName: Print New Environment  # Print again since it has been modified
  - bash: rm -rf libs/dxflib
    displayName: Remove bundled dxflib lib
    condition: and(succeeded(), eq(variables['UNBUNDLE_DXFLIB'], 'true'))
  - bash: rm -rf libs/googletest
    displayName: Remove bundled googletest lib
    condition: and(succeeded(), eq(variables['UNBUNDLE_GTEST'], 'true'))
  - bash: rm -rf libs/muparser
    displayName: Remove bundled muparser lib
    condition: and(succeeded(), eq(variables['UNBUNDLE_MUPARSER'], 'true'))
  - bash: rm -rf libs/quazip
    displayName: Remove bundled quazip lib
    condition: and(succeeded(), eq(variables['UNBUNDLE_QUAZIP'], 'true'))
  - bash: rm -rf libs/polyclipping
    displayName: Remove bundled polyclipping lib
    condition: and(succeeded(), eq(variables['UNBUNDLE_POLYCLIPPING'], 'true'))
  - bash: ./ci/build_librepcb.sh
    displayName: Build LibrePCB
  - bash: ./ci/build_linux_portables.sh
    displayName: Build Portable Packages
    condition: and(succeeded(), eq(variables['DEPLOY'], 'true'))
  - bash: xvfb-run -a ./build/tests/unittests/librepcb-unittests
    displayName: Run LibrePCB Unittests
  - bash: xvfb-run -a --server-args="-screen 0 1024x768x24" pytest -vvv --librepcb-executable="build/install/opt/bin/librepcb-cli" ./tests/cli
    displayName: Run LibrePCB-CLI Functional Tests
  - bash: xvfb-run -a --server-args="-screen 0 1024x768x24" pytest -vvv --librepcb-executable="build/install/opt/bin/librepcb" --reruns 5 --reruns-delay 10 ./tests/funq
    displayName: Run LibrePCB Functional Tests
  - bash: ./ci/upload_artifacts.sh
    displayName: Upload Artifacts
    condition: and(succeeded(), eq(variables['DEPLOY'], 'true'), ne(variables['Build.Reason'], 'PullRequest'))
    env:
      UPLOAD_URL: $(ARTIFACTS_UPLOAD_URL)
      UPLOAD_USER: $(ARTIFACTS_UPLOAD_USER)
      UPLOAD_PASS: $(ARTIFACTS_UPLOAD_PASS)
      UPLOAD_SIGN_KEY: $(ARTIFACTS_UPLOAD_SIGN_KEY)
