jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu-16.04'
  variables:
    OS: 'linux'
    ARCH: 'x86_64'
  strategy:
    matrix:
      Ubuntu_1404_GCC:
        IMAGE: librepcb/librepcb-dev:ubuntu-14.04-1
      Ubuntu_1604_GCC:
        IMAGE: librepcb/librepcb-dev:ubuntu-16.04-1
      Ubuntu_1604_Qt_5_12_3_GCC:
        IMAGE: librepcb/librepcb-dev:ubuntu-16.04-qt5.12.3-1
        DEPLOY: true
      Ubuntu_1804_Clang:
        IMAGE: librepcb/librepcb-dev:ubuntu-18.04-1
        CC: clang
        CXX: clang++
      Ubuntu_1904_GCC9:
        IMAGE: librepcb/librepcb-dev:ubuntu-19.04-1
        CC: gcc-9
        CXX: g++-9
  container: $[ variables['IMAGE'] ]
  steps:
  - checkout: self
    clean: true
    submodules: recursive
  - bash: |
      source ./ci/install_dependencies.sh
      # Pass modified PATH to following steps:
      echo "##vso[task.setvariable variable=PATH]$PATH"
    displayName: Install Dependencies
  - bash: ./ci/build_librepcb.sh
    displayName: Build LibrePCB
  - bash: ./ci/build_linux_appimage.sh
    displayName: Build AppImage
    condition: and(succeeded(), eq(variables['DEPLOY'], 'true'))
  - bash: ./ci/build_installer.sh
    displayName: Build Installer
    condition: and(succeeded(), eq(variables['DEPLOY'], 'true'))
  - bash: xvfb-run -a ./build/output/qztest
    displayName: Run QuaZip Unittests
  - bash: xvfb-run -a ./build/output/librepcb-unittests
    displayName: Run LibrePCB Unittests
  - bash: xvfb-run -a --server-args="-screen 0 1024x768x24" pytest -v --librepcb-executable="build/install/opt/bin/librepcb-cli" ./tests/cli
    displayName: Run LibrePCB-CLI Functional Tests
  - bash: xvfb-run -a --server-args="-screen 0 1024x768x24" pytest -v --librepcb-executable="build/install/opt/bin/librepcb" ./tests/funq
    displayName: Run LibrePCB Functional Tests
  - bash: ./ci/upload_artifacts.sh
    displayName: Upload Artifacts
    condition: and(succeeded(), eq(variables['DEPLOY'], 'true'), ne(variables['Build.Reason'], 'PullRequest'))
    env:
      UPLOAD_URL: $(ARTIFACTS_UPLOAD_URL)
      UPLOAD_USER: $(ARTIFACTS_UPLOAD_USER)
      UPLOAD_PASS: $(ARTIFACTS_UPLOAD_PASS)
      UPLOAD_SIGN_KEY: $(ARTIFACTS_UPLOAD_SIGN_KEY)
