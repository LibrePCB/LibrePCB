jobs:
- job: macOS
  pool:
    vmImage: 'macOS-13'
  timeoutInMinutes: 180
  variables:
    OS: 'mac'
    ARCH: 'x86_64'
    COPYFILE_DISABLE: 1 # Stop creating shit files (https://superuser.com/questions/259703/get-mac-tar-to-stop-putting-filenames-in-tar-archives)
    HOMEBREW_NO_INSTALL_CLEANUP: 1 # Might speed up homebrew commands(?)
  steps:
  - checkout: self
    clean: true
    submodules: recursive
  - bash: ./ci/print_environment.sh
    displayName: Print Environment
  - bash: |
      source ./ci/install_dependencies.sh
      # Pass modified PATH to following steps:
      echo "##vso[task.setvariable variable=PATH]$PATH"
    displayName: Install Dependencies
    env:
      SLINT_UI_TESTING_AUTH: $(SLINT_UI_TESTING_AUTH)
  - template: azure-cache.yml
  - bash: ./ci/print_environment.sh
    displayName: Print New Environment  # Print again since it has been modified
  - bash: ./ci/build_librepcb.sh
    displayName: Build LibrePCB
  - bash: ./ci/build_mac_bundle.sh
    displayName: Build Bundle
  - bash: cd libs/librepcb/rust-core && cargo test --features=fail-on-warnings
    displayName: Run rust-core tests
  - bash: ./build/tests/unittests/librepcb-unittests
    displayName: Run LibrePCB Unittests
  - bash: uv --directory ./tests/cli run --no-dev pytest -vvv --librepcb-executable="../../build/install/LibrePCB.app/Contents/MacOS/librepcb-cli"
    displayName: Run LibrePCB-CLI Functional Tests
  # Note: Functional tests need to be run with the non-bundled app,
  # otherwise we get errors due to multiple definitions of Qt symbols.
  - bash: uv --directory ./tests/funq run --no-dev pytest -vvv --librepcb-executable="../../build/install/bin/librepcb.app/Contents/MacOS/librepcb" --reruns 5 --reruns-delay 10
    displayName: Run LibrePCB Functional Tests
  - bash: uv --directory "./tests/ui" run --no-dev pytest -vvv --librepcb-executable="../../build/install/bin/librepcb.app/Contents/MacOS/librepcb"
    displayName: Run LibrePCB UI Tests
    condition: and(succeeded(), variables['SLINT_UI_TESTING_AUTH'])
    env:
      SLINT_UI_TESTING_AUTH: $(SLINT_UI_TESTING_AUTH)
  - bash: |
      ./ci/tar_artifacts.sh
      ./ci/upload_artifacts.sh
    displayName: Tar & Upload Artifacts
    condition: and(succeeded(), variables['ARTIFACTS_UPLOAD_URL'], ne(variables['Build.Reason'], 'PullRequest'))
    env:
      UPLOAD_URL: $(ARTIFACTS_UPLOAD_URL)
      UPLOAD_USER: $(ARTIFACTS_UPLOAD_USER)
      UPLOAD_PASS: $(ARTIFACTS_UPLOAD_PASS)
      UPLOAD_SIGN_KEY: $(ARTIFACTS_UPLOAD_SIGN_KEY)
