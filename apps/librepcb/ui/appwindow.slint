import { Button, ProgressIndicator, StandardButton } from "std-widgets.slint";
import { SideBar, MainPage } from "./sidebar.slint";
import { LengthEdit } from "./lengthedit.slint";
import { LibrariesPanel } from "./librariespanel.slint";
import { ProjectPanel } from "./projectpanel.slint";
import { HomePanel } from "./homepanel.slint";
import { MenuBar } from "./menubar.slint";
import { WindowSection } from "./windowsection.slint";
import { Globals, Tab } from "./globals.slint";

export { Globals }

export component AppWindow inherits Window {
    property <length> panel-width: (self.width <= 800px) ? 250px : 350px;
    in property <string> window-title <=> self.title;
    in-out property <MainPage> page <=> sideBar.page;

    callback close();

    background: #4f4f4f;
    icon: @image-url("img/librepcb.png");
    preferred-width: 1024px;
    preferred-height: 768px;

    menuBar := MenuBar { }

    sideBar := SideBar {
        x: 0px;
        y: menuBar.height;
        z: 100;
        width: (root.width <= 800px) ? 40px : 50px;
        height: parent.height - self.y - statusBar.height - 1px;
        page: MainPage.project;
    }

    if sideBar.page == MainPage.home: homePanel := HomePanel {
        x: sideBar.width;
        y: sideBar.y;
        width: panel-width;
        height: sideBar.height;
    }

    if sideBar.page == MainPage.home: Button {
        x: root.width - self.width - 10px;
        y: root.height - self.height - 100px;
        text: "Dialog";
        clicked => {
            dialog.show();
        }
    }

    if sideBar.page == MainPage.home: Button {
        x: root.width - self.width - 10px;
        y: root.height - self.height - 50px;
        text: "Close";
        clicked => {
            close();
        }
    }

    if sideBar.page == MainPage.libraries: libsPanel := LibrariesPanel {
        x: sideBar.width;
        y: sideBar.y;
        width: panel-width;
        height: sideBar.height;
    }

    if sideBar.page == MainPage.project: prjPanel := ProjectPanel {
        x: sideBar.width;
        y: sideBar.y;
        width: panel-width;
        height: sideBar.height;
    }

    in property <image> left-scene-image;
    in property <image> right-scene-image;

    out property <length> left-scene-width;
    //out property <length> scene-height: section-left.scene-height;

    HorizontalLayout {
        property <int> section-count: min(Globals.tabs-left.length, 1) + min(Globals.tabs-right.length, 1);

        x: sideBar.width + panel-width;
        y: sideBar.y + 1px;
        width: parent.width - self.x;
        height: sideBar.height - 1px;

        if section-count == 0: Text {
            width: parent.width;
            color: gray;
            horizontal-alignment: TextHorizontalAlignment.center;
            vertical-alignment: TextVerticalAlignment.center;
            font-size: 30px;
            wrap: TextWrap.word-wrap;
            text: @tr("Open a library, schematic or board.");
        }

        if Globals.tabs-left.length > 0: section-left := WindowSection {
            min-width: 100px;
            preferred-width: 200px;
            group: 0;
            tabs: Globals.tabs-left;
            scene-image: left-scene-image;

            changed scene-width => {
                left-scene-width = self.scene-width;
            }
        }

        if section-count == 2: Rectangle {
            width: 1px;
        }

        if Globals.tabs-right.length > 0: section-right := WindowSection {
            min-width: 100px;
            preferred-width: 200px;
            group: 1;
            tabs: Globals.tabs-right;
            scene-image: right-scene-image;
        }
    }

    if sideBar.page == MainPage.preferences: e1 := LengthEdit {
        x: 100px;
        y: 50px;
    }

    if sideBar.page == MainPage.preferences: e2 := LengthEdit {
        x: 100px;
        y: 100px;
    }

    in property <string> workspace-path <=> lblStatusLeft.text;

    statusBar := Rectangle {
        x: 0;
        y: parent.height - self.height;
        width: parent.width;
        height: 25px;
        background: sideBar.background;
        HorizontalLayout {
            padding: 5px;
            spacing: 10px;
            lblStatusLeft := Text {
                color: white;
                text: "Workspace Path";
            }

            Rectangle {
                width: 150px;
                prgStatus := ProgressIndicator {
                    width: 100%;
                    visible: self.progress > 0 && self.progress < 1;
                    progress: Globals.status-bar-progress / 100;
                }
            }
        }
    }

    dialog := PopupWindow {
        Dialog {
            x: parent.width / 2;
            y: parent.height / 2;
            width: 100px;
            height: 100px;
            background: black;
            title: "Dialog";
            Text {
                text: "Hello World!";
            }

            StandardButton {
                kind: ok;
            }

            StandardButton {
                kind: cancel;
            }
        }
    }
}
