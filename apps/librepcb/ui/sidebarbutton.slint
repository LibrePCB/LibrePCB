import { Button, VerticalBox } from "std-widgets.slint";

export component SideBarButton inherits Rectangle {
    in property <image> icon <=> i-icon.source;
    in property <string> toolTip;
    in property <color> status-background;
    in property <color> status-color;
    in property <string> status-text;
    in-out property <bool> enabled: true;
    in-out property <bool> checked: false;

    callback clicked;

    background: self.checked ? #1c1c1c : (ta.pressed ? #555555 : (ta.has-hover ? #424242 : #353535));
    height: self.width;

    if checked: Rectangle {
        x: 0px;
        width: 3px;
        background: #d8d8d8;
    }

    ta := TouchArea {
        enabled: enabled;
        clicked => {
            root.clicked();
        }
    }

    i-icon := Image {
        width: 70%;
        height: 70%;
        colorize: enabled ? transparent : gray;
    }

    if status-text != "": Rectangle {
        x: parent.width - self.width - 2px;
        y: parent.height - self.height - 2px;
        width: max(t-status.preferred-width + 8px, self.height * 1.5);
        height: t-status.preferred-height + 2px;
        border-radius: self.height / 2;
        background: status-background;

        t-status := Text {
            font-size: 10px;
            font-weight: 700;
            color: status-color;
            text: status-text;
        }
    }

    if ta.has-hover: Rectangle {
        x: root.width + 5px;
        y: (root.height / 2) - (self.height / 2);
        width: popupText.preferred-width + 10px;
        height: 25px;
        background: #3b3b3b;
        border-radius: 3px;

        animate opacity { duration: 150ms; }

        popupText := Text {
            x: 5px;
            color: #ffffffca;
            horizontal-alignment: TextHorizontalAlignment.left;
            vertical-alignment: TextVerticalAlignment.center;
            wrap: TextWrap.no-wrap;
            overflow: TextOverflow.elide;
            text: toolTip;
        }
    }
}
