import { Globals, Tab, TabType, SectionData } from "./globals.slint";
import { SceneButton } from "./scenebutton.slint";

export component WindowSection inherits Rectangle {
    in-out property <SectionData> section;
    in property <[Tab]> tabs;
    in property <int> scene-frame;

    tabBar := Rectangle {
        x: 0;
        y: 0;
        height: 30px;
        background: #353535;

        HorizontalLayout {
            alignment: LayoutAlignment.start;

            for tab[index] in tabs: Rectangle {
                background: (index == section.tab-index) ? #505050 : (ta-tab.has-hover ? #404040 : #303030);

                ta-tab := TouchArea {
                    clicked => {
                        if Globals.preview-mode {
                            section.tab-index = index;
                        } else {
                            Globals.tab-clicked(section.index, index);
                        }
                    }
                }

                HorizontalLayout {
                    padding-left: 4px;
                    padding-right: 2px;
                    spacing: 3px;

                    Image {
                        width: 16px;
                        source: (tab.type == TabType.schematic) ? @image-url("img/image.svg") : @image-url("img/projects.png");
                    }

                    t-tab := Text {
                        vertical-alignment: TextVerticalAlignment.center;
                        color: (index == section.tab-index) ? white : #a0a0a0;
                        text: tab.title;
                    }

                    Rectangle {
                        y: (parent.height - self.height) / 2;
                        width: i-tab-close.width;
                        height: i-tab-close.height;
                        background: ta-tab-close.has-hover ? #454545 : transparent;
                        border-radius: 3px;

                        i-tab-close := Image {
                            source: @image-url("img/close.svg");
                            colorize: t-tab.color;
                        }

                        ta-tab-close := TouchArea {
                            clicked => {
                                Globals.tab-close-clicked(section.index, index);
                            }
                        }
                    }
                }
            }
        }
    }

    Image {
        x: 0;
        y: tabBar.height;
        width: 100%;
        height: parent.height - self.y;
        image-fit: ImageFit.preserve;
        image-rendering: ImageRendering.pixelated;
        source: Globals.render-scene(section.index, self.width, self.height, scene-frame);

        TouchArea {
            pointer-event(e) => {
                return Globals.scene-pointer_event(section.index, self.mouse-x, self.mouse-y, self.pressed-x, self.pressed-y, e);
            }
            scroll-event(e) => {
                return Globals.scene-scrolled(section.index, self.mouse-x, self.mouse-y, e);
            }
        }

        VerticalLayout {
            x: parent.width - self.preferred-width - 10px;
            y: 10px;
            width: self.preferred-width;
            spacing: 5px;

            SceneButton {
                image: @image-url("img/zoom-fit.svg");
                colorize: section.overlay-color;
            }

            SceneButton {
                image: @image-url("img/zoom-in.svg");
                colorize: section.overlay-color;
            }

            SceneButton {
                image: @image-url("img/zoom-out.svg");
                colorize: section.overlay-color;
            }

            if tabs[section.tab-index].type == TabType.board-2d: SceneButton {
                text: "3D";
                colorize: section.overlay-color;
                clicked => {
                    Globals.board-3d-clicked(tabs[section.tab-index].index);
                }
            }
        }
    }
}
