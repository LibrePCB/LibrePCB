export enum MenuItemId {
    new-window,
}

export enum LibraryType {
    local,
    remote,
    online,
}

export enum LibraryState {
    unknown,
    up-to-date,
    outdated,
}

export struct Library {
    id: string,
    name: string,
    description: string,
    version: string,
    icon: image,
    recommended: bool,
    type: LibraryType,
    state: LibraryState,
    progress: int, // [%], 0 if not installing
    checked: bool,
}

export struct FolderTreeItem {
    level: int,
    icon: image,
    name: string,
    path: string,
    is-folder: bool,
}

export struct Project {
    path: string,
    name: string,
}

export struct ProjectData {
    valid: bool,
    name: string,
    schematics: [string],
    boards: [string],
}

export enum TabType {
    schematic,
    board,
}

export struct Tab {
    type: TabType,
    index: int,  // Index of schematic or board in the project (not tab index)
    title: string,
}

export struct EditParseResult {
    valid: bool,
    evaluated-value: string,
    evaluated-unit: string,
}

export global Globals {
    pure callback menu-item-triggered(MenuItemId);

    pure callback parse-length-input(string, string) -> EditParseResult;

    // An item in a project tree view has been double-clicked.
    //
    // - File path (see FolderTreeItem::path)
    pure callback project-item-doubleclicked(string);

    // A schematic in the projects panel has been clicked.
    //
    // - Schematic index
    pure callback schematic-clicked(int);

    // A board in the projects panel has been clicked.
    //
    // - Board index
    pure callback board-clicked(int);

    // Requested to switch to a particular tab
    //
    // - Section index (0 = left, 1 = right)
    // - Clicked tab index
    pure callback tab-clicked(int, int);

    // Requested to close a particular tab
    //
    // - Section index (0 = left, 1 = right)
    // - Clicked tab index
    pure callback tab-close-clicked(int, int);

    // Populate the installed-libraries and available-libraries models with data
    // if not done yet (lazy loading only if libraries are visible in the UI).
    pure callback ensure-libraries-populated();

    // Install all checked libraries
    pure callback install-checked-libraries();

    // Uninstall a library
    //
    // - Library ID (see Library::id)
    pure callback uninstall-library(string);

    // Render a graphics scene image
    //
    // - Scene section (0 = left, 1 = right)
    // - Scene width
    // - Scene height
    // - Frame number (to be ignored)
    pure callback render-scene(int, length, length, int) -> image;

    pure callback scene-pointer-event(int, length, length, length, length, PointerEvent) -> EventResult;

    pure callback scene-scrolled(int, length, length, PointerScrollEvent) -> EventResult;

    in property <bool> preview-mode: true;

    in property <[FolderTreeItem]> workspace-folder: [
        {
            icon: @image-url("img/library.png"),
            name: "project-1",
            path: "/path/to",
            is-folder: true,
        },
        {
            level: 1,
            icon: @image-url("img/library.png"),
            name: "project-2.lpp",
            path: "/path/to/project-2.lpp",
        },
    ];

    in property <[FolderTreeItem]> recent-projects: [
        {
            icon: @image-url("img/library.png"),
            name: "project-1.lpp",
            path: "/path/to/project-1.lpp",
        },
        {
            icon: @image-url("img/library.png"),
            name: "project-2.lpp",
            path: "/path/to/project-2.lpp",
        },
    ];

    in property <[FolderTreeItem]> favorite-projects: recent-projects;

    in property <[Project]> open-projects: [
        {
            path: "/path/to/project-1.lpp",
            name: "Project 1",
        },
        {
            path: "/path/to/project-2.lpp",
            name: "Project 2",
        },
    ];

    in property <ProjectData> current-project: {
        valid: true,
        name: "Project 1",
        schematics: ["Power", "Logic"],
        boards: ["Default", "Experiment"],
    };

    in property <int> status-bar-progress: 50;

    in property <bool> refreshing-available-libraries: true;

    in property <int> outdated-libraries: 2;

    in property <int> checked-libraries: 3;

    in property <[Library]> libraries: [
        {
            name: "My Library",
            description: "My own local library.",
            version: "v1.0",
            icon: @image-url("img/library.png"),
            type: LibraryType.local,
            state: LibraryState.unknown,
        },
        {
            name: "LibrePCB Base",
            description: "Official LibrePCB Base Library",
            version: "v1.2.3",
            icon: @image-url("img/librepcb.png"),
            type: LibraryType.remote,
            state: LibraryState.up-to-date,
        },
        {
            name: "Microchip Technology / Atmel",
            description: "Integrated circuits and more (unofficial).",
            version: "v0.5",
            icon: @image-url("img/microchip.png"),
            type: LibraryType.remote,
            state: LibraryState.outdated,
        },
        {
            name: "LibrePCB Integrated Circuits",
            description: "Official LibrePCB Integrated Circuits Library",
            icon: @image-url("img/librepcb.png"),
            type: LibraryType.online,
        },
        {
            name: "Microchip Technology / Atmel",
            description: "Integrated circuits and more (unofficial).",
            icon: @image-url("img/microchip.png"),
            type: LibraryType.online,
            progress: 42,
        },
    ];

    in property <[Tab]> tabs-left: [
        { type: TabType.schematic, index: 0, title: "Tab 1" },
        { type: TabType.board, index: 0, title: "Tab 2" },
        { type: TabType.schematic, index: 1, title: "Tab 3" },
    ];

    in property <int> tab-index-left: 0;

    in property <[Tab]> tabs-right: [
        { type: TabType.schematic, index: 0, title: "Tab 4" },
        { type: TabType.board, index: 0, title: "Tab 5" },
        { type: TabType.schematic, index: 1, title: "Tab 6" },
    ];

    in property <int> tab-index-right: 0;
}
